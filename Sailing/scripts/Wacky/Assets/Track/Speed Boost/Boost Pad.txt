//Boost pad Script
//Written by Brian Young/Daijo Zenovka
//is located in root of boost pad

//If it is not wacky mode, the Wacky Mode Button tells the primitive to rise in the air and go transparent. Otherwise, the primitive will come down and be active for wacky racing. The boost pad script is located in the root, where if a boat touches the primitive or its children, the boat gets a speed boost. This only affects wacky boats. This script communicates with the boat that it has collided with, and requests that the boat gets a speed boost.

integer Wacky_Channel = -309;
string Stop_Boost_Glow = "Stop_Boost_Glow";
string Start_Boost_Glow = "Start_Boost_Glow";
string Enable_Wacky = "Enable_Wacky";
string Speed_Boost = "Speed_Boost";
float BoostValue = 60;
integer BoostTime = 2;

integer IsBoost = TRUE;

integer Boat_Channel = -306;

string Delimiter = "%$%^";

integer IsWacky = FALSE;

vector OriginalPos;

vector NewPos;


update(integer SetWacky)
{
    integer i;
        

    
    if (!SetWacky)
    {
            float distance = llVecDist(llGetPos(), NewPos);
    
    integer numturn = (integer)(distance/10.0);
        for (i = 0; i < numturn; i++)
        {
            
               
            llSetPos(llGetPos() +  (NewPos - OriginalPos)/numturn);
            
        }
        
        
        llSetPos(NewPos);
        llVolumeDetect(FALSE);
        llSetStatus(STATUS_PHANTOM, TRUE);
        
        llSetLinkAlpha(LINK_SET, 0.0, ALL_SIDES);
        llSetLinkPrimitiveParams(LINK_SET, [25, ALL_SIDES, 0]);    
        
        llMessageLinked(LINK_THIS,0,Stop_Boost_Glow,NULL_KEY);
                  
    }
    else
    {
            float distance = llVecDist(llGetPos(), OriginalPos);
    
    integer numturn = (integer)(distance/10.0);
        for (i = 0; i < numturn; i++)
        {
            
               
            llSetPos(llGetPos() +  ( OriginalPos-NewPos)/numturn);
            
        }
        
        
        llSetPos(OriginalPos);
        llVolumeDetect(TRUE);
        llSetStatus(STATUS_PHANTOM, TRUE);
        llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);
        llSetLinkPrimitiveParams(LINK_SET, [25, ALL_SIDES, 0.1]);  
        llMessageLinked(LINK_THIS,0,Start_Boost_Glow,NULL_KEY);  
    }   
    // --> turn off
}

default
{
    state_entry()
    {
        llListen(Wacky_Channel,"", NULL_KEY, "");
        OriginalPos = llGetPos();
        NewPos = OriginalPos + <0,0,20>;
        
        
        update(TRUE);
        
        llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);

    }
    touch(integer num)
    {
        if (llDetectedKey(0) == llGetOwner())
        {
            llResetScript();   
            llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);
        }

    }
    listen( integer channel, string name, key id, string message )
    {

        if (channel == Wacky_Channel)
        {
            list temp = llParseString2List(message, [Delimiter], []);   
            
            if (llList2String(temp,0) == Enable_Wacky)
            {
                IsWacky = llList2Integer(temp,1);
                
                
                update(IsWacky);
            }
        } 
    }
    collision_start(integer num)
    {
        llRegionSay(Boat_Channel, Speed_Boost  +Delimiter +llKey2Name(llDetectedKey(0))+ Delimiter + (string)IsBoost + Delimiter +(string)BoostTime + Delimiter +(string)BoostValue);
    }
 
}