// Barrier Script
// Written by Brian Young/ Daijo Zenovka

//goes in root prim of barrier

//Barriers guide boats along the course, making them turn in the right direction. The barriers cause the boat to slow down, and come to a complete stop if the boats hit them head on. If it is not wacky mode, the Wacky Mode Button tells the primitive to rise in the air and go transparent. Otherwise, the primitive will come down and be active for wacky racing.


integer Wacky_Channel = -309;

string Enable_Wacky = "Enable_Wacky";

string Delimiter = "%$%^";

integer IsWacky = FALSE;

vector OriginalPos;

vector NewPos;


update(integer SetWacky)
{
    integer i;
        

    
    if (!SetWacky)
    {
            float distance = llVecDist(llGetPos(), NewPos);
    
    integer numturn = (integer)(distance/10.0);
        for (i = 0; i < numturn; i++)
        {
            
               
            llSetPos(llGetPos() +  (NewPos - OriginalPos)/numturn);
            
        }
        
        llSetPos(NewPos);
        llSetStatus(STATUS_PHANTOM, TRUE);
        llVolumeDetect(FALSE);
         llSetLinkAlpha(LINK_SET, 0.0, ALL_SIDES);
        llSetLinkPrimitiveParams(LINK_SET, [25, ALL_SIDES, 0]);     
        

                  
    }
    else
    {
            float distance = llVecDist(llGetPos(), OriginalPos);
    
    integer numturn = (integer)(distance/10.0);
        for (i = 0; i < numturn; i++)
        {
            
               
            llSetPos(llGetPos() +  ( OriginalPos-NewPos)/numturn);
            
        }
        
        
        llSetPos(OriginalPos);
        llSetStatus(STATUS_PHANTOM, FALSE);
       llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);
        llSetLinkPrimitiveParams(LINK_SET, [25, ALL_SIDES, 0.1]);  

    }   
    // --> turn off
}

default
{
    state_entry()
    {
        llListen(Wacky_Channel,"", NULL_KEY, "");
        OriginalPos = llGetPos();
        NewPos = OriginalPos + <0,0,20>;
        
        
        //update(IsWacky);
        
        llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);

    }
    touch(integer num)
    {
        if (llDetectedKey(0) == llGetOwner())
        {
            llResetScript();   
            llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);
        }

    }
    listen( integer channel, string name, key id, string message )
    {

        if (channel == Wacky_Channel)
        {
            list temp = llParseString2List(message, [Delimiter], []);   
            
            if (llList2String(temp,0) == Enable_Wacky)
            {
                IsWacky = llList2Integer(temp,1);
                
                
                update(IsWacky);
            }
        }
    }
    collision_start(integer num)
    {

    }
 
}