//Slip Pad Script
//Written by Brian Young/Daijo Zenovka

//goes in room primitive of Slip Pad

//The slip pad script is located in the oil slick, where if a boat touches the primitive, the boat spins. This only affects wacky boats. This script communicates with the boat that it has collided with, and requests that the boat spins in place. If it is not wacky mode, the Wacky Mode Button tells the primitive to rise in the air and go transparent. Otherwise, the primitive will come down and be active for wacky racing.

integer Wacky_Channel = -309;

string Enable_Wacky = "Enable_Wacky";
string Boat_Slip = "Boat_Slip";
float SlipValue = 60;
integer SlipTime = 3;

integer IsSlip = TRUE;

integer Boat_Channel = -306;

string Delimiter = "%$%^";

integer IsWacky = FALSE;

vector OriginalPos;

vector NewPos;

update(integer SetWacky)
{
    integer i;
        

    
    if (!SetWacky)
    {
            float distance = llVecDist(llGetPos(), NewPos);
    
    integer numturn = (integer)(distance/10.0);
        for (i = 0; i < numturn; i++)
        {
            
               
            llSetPos(llGetPos() +  (NewPos - OriginalPos)/numturn);
            
        }
        
        
        llSetPos(NewPos);
        llVolumeDetect(FALSE);
        llSetStatus(STATUS_PHANTOM, TRUE);
        
        llSetLinkAlpha(LINK_SET, 0.0, ALL_SIDES);
        llSetLinkPrimitiveParams(LINK_SET, [25, ALL_SIDES, 0]);    

                  
    }
    else
    {
            float distance = llVecDist(llGetPos(), OriginalPos);
    
    integer numturn = (integer)(distance/10.0);
        for (i = 0; i < numturn; i++)
        {
            
               
            llSetPos(llGetPos() +  ( OriginalPos-NewPos)/numturn);
            
        }
        
        
        llSetPos(OriginalPos);
        llVolumeDetect(TRUE);
        llSetStatus(STATUS_PHANTOM, TRUE);
        llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);
        llSetLinkPrimitiveParams(LINK_SET, [25, ALL_SIDES, 0.1]);  

    }   
    // --> turn off
}

default
{
    state_entry()
    {
        llListen(Wacky_Channel,"", NULL_KEY, "");
        OriginalPos = llGetPos();
        NewPos = OriginalPos + <0,0,20>;
        
        
        llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);

    }
    touch(integer num)
    {
        if (llDetectedKey(0) == llGetOwner())
        {
            llResetScript();   
            llSetLinkAlpha(LINK_SET, 1.0, ALL_SIDES);
        }

    }
    listen( integer channel, string name, key id, string message )
    {

        if (channel == Wacky_Channel)
        {
            list temp = llParseString2List(message, [Delimiter], []);   
            
            if (llList2String(temp,0) == Enable_Wacky)
            {
                IsWacky = llList2Integer(temp,1);
                
                
                update(IsWacky);
            }
        } 
    }
    collision_start(integer num)
    {
        llRegionSay(Boat_Channel, Boat_Slip  +Delimiter +llKey2Name(llDetectedKey(0))+ Delimiter + (string)IsSlip + Delimiter +(string)SlipTime + Delimiter +(string)SlipValue);
    }
 
}